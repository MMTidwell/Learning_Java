package Model;

import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;

public class SongBook {
	// Song is not part of the imported util package, but actually the Song class
	private List<Song> mSongs;
	
	// Constructor
	public SongBook() {
		mSongs = new ArrayList<Song>();
	}
	
	// writes out song using a custom serialization
	// This will export our SongBook
	public void exportTo(String fileName) {
		try (FileOutputStream fos = new FileOutputStream(fileName);
			PrintWriter writer =  new PrintWriter(fos);
		) {
			for (Song song:mSongs) {
				writer.printf("#%s|%s|%s%n", song.getArtist(), song.getTitle(), song.getVideoUrl());
			}
		} catch (IOException ioe) {
			System.out.printf("Problem saving %s%n", fileName);
			ioe.printStackTrace();
		}
	}
	
	public void improtFrom(String fileName) {
		try (FileInputStream fis = new FileInputStream(fileName);
			BufferedReader reader = new BufferedReader(new InputStreamReader(fis));
				) {
			
		} catch () {
			
		}
	}
	
	// adds the song to mSongs
	public void addSong(Song song) {
		mSongs.add(song);
	}
	
	// exposes what is in the mSongs list, this will return the number of songs
	public int getSongCount() {
		return mSongs.size();
	}
	
	// gets artist and song
	private Map<String, List<Song>> byArtist() {
		Map<String, List<Song>> byArtist = new HashMap<>();
		for (Song song:mSongs) {
			List<Song> artistSongs = byArtist.get(song.getArtist());
			if (artistSongs == null) {
				artistSongs = new ArrayList<>();
				byArtist.put(song.getArtist(), artistSongs);
			}
			artistSongs.add(song);
		}
		return byArtist;
	}
	
	// exposes our artist
	public Set<String> getArtist() {
		return byArtist().keySet();
	}
	
	// exposes our songs 
	public List<Song> getSongsForArtist(String artistName) {
		return byArtist().get(artistName);
	}
}
















